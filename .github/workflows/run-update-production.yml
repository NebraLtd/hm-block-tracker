name: Run Blessed Block Update (Production)

on:
  push:
    branches:
     - production
  schedule:
    - cron: "10 * * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
        with:
          ref: production
      - name: Install Python & dependencies.
        run: |
          sudo apt-get update
          sudo apt-get install python3 python3-dev python3-pip -y
          sudo pip3 install -r requirements.txt
      - name: Run config file generator.
        run: |
          PYTHONPATH=`pwd` PRODUCTION=1 python3 miner_config/generate_config.py
          PYTHONPATH=`pwd` PRODUCTION=1 ROCKPI=1 python3 miner_config/generate_config.py
          PYTHONPATH=`pwd` PRODUCTION=1 PISCES=1 python3 miner_config/generate_config.py
          PYTHONPATH=`pwd` PRODUCTION=1 PYCOM=1 python3 miner_config/generate_config.py
          # Output latest version info
          HEIGHT=$(curl -s -H 'Cache-Control: no-cache' https://storage.googleapis.com/helium-snapshots.nebracdn.com/latest.json | jq -r '.height')
          HASH=$(curl -s -H 'Cache-Control: no-cache' https://storage.googleapis.com/helium-snapshots.nebracdn.com/latest.json | jq -r '.hash')
          echo "Block height: $HEIGHT"
          echo "Block hash: $HASH"
          exit 0
      - name: Setup gsutil.
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GOOGLE_SA }}
          project_id: ${{ secrets.GOOGLE_PROJECT }}
          export_default_credentials: true
      - name: Copy config file to bucket.
        run: |
          gsutil cp docker.config gs://helium-assets.nebra.com/docker.config
          gsutil cp docker.config.rockpi gs://helium-assets.nebra.com/docker.config.rockpi
          gsutil cp docker.config.pisces gs://helium-assets.nebra.com/docker.config.pisces
          gsutil cp docker.config.pycom gs://helium-assets.nebra.com/docker.config.pycom
      - name: Set ACL
        run: |
          gsutil acl set acl.txt gs://helium-assets.nebra.com/docker.config
          gsutil acl set acl.txt gs://helium-assets.nebra.com/docker.config.rockpi
          gsutil acl set acl.txt gs://helium-assets.nebra.com/docker.config.pisces
          gsutil acl set acl.txt gs://helium-assets.nebra.com/docker.config.pycom
      - name: Change Cache-Control metadata of assets
        run: |
          gsutil setmeta -h "Cache-Control:max-age=60" gs://helium-assets.nebra.com/docker.config
          gsutil setmeta -h "Cache-Control:max-age=60" gs://helium-assets.nebra.com/docker.config.rockpi
          gsutil setmeta -h "Cache-Control:max-age=60" gs://helium-assets.nebra.com/docker.config.pisces
          gsutil setmeta -h "Cache-Control:max-age=60" gs://helium-assets.nebra.com/docker.config.pycom
          gsutil setmeta -h "Cache-Control:max-age=60" gs://helium-snapshots.nebracdn.com/latest.json
          gsutil setmeta -h "Cache-Control:max-age=60" gs://helium-snapshots.nebracdn.com/latest-snap.json
      - name: Purge Cloudflare Cache for URL
        run: |
          sleep 2m
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
          -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_CACHE_PURGE_KEY }}" \
          -H "Content-Type: application/json" \
          --data '{"files":["https://helium-assets.nebra.com/docker.config",{"url":"https://helium-assets.nebra.com/docker.config"}]}'
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
          -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_CACHE_PURGE_KEY }}" \
          -H "Content-Type: application/json" \
          --data '{"files":["https://helium-assets.nebra.com/docker.config.rockpi",{"url":"https://helium-assets.nebra.com/docker.config.rockpi"}]}'
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
          -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_CACHE_PURGE_KEY }}" \
          -H "Content-Type: application/json" \
          --data '{"files":["https://helium-assets.nebra.com/docker.config.pisces",{"url":"https://helium-assets.nebra.com/docker.config.pisces"}]}'
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
          -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_CACHE_PURGE_KEY }}" \
          -H "Content-Type: application/json" \
          --data '{"files":["https://helium-assets.nebra.com/docker.config.pycom",{"url":"https://helium-assets.nebra.com/docker.config.pycom"}]}'
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
          -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_CACHE_PURGE_KEY }}" \
          -H "Content-Type: application/json" \
          --data '{"files":["https://helium-snapshots.nebracdn.com/latest.json",{"url":"https://helium-snapshots.nebracdn.com/latest.json"}]}'
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
          -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_CACHE_PURGE_KEY }}" \
          -H "Content-Type: application/json" \
          --data '{"files":["https://helium-snapshots.nebracdn.com/latest-snap.json",{"url":"https://helium-snapshots.nebracdn.com/latest-snap.json"}]}'
      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@master
        with:
          status: ${{ job.status }}
          notification_title: 'Production hm-block-tracker config update has failed - please check urgently!'
          message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>'
          footer: '<{run_url}|View Run> | Linked Repo <{repo_url}|{repo}> | <{workflow_url}|View Workflow>'
          mention_groups: 'S02GCFWL27R'
          notify_when: 'failure'
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.MINER_MONITORING_SLACK }}
      - name: Report Status Dev Team
        if: always()
        uses: ravsamhq/notify-slack-action@master
        with:
          status: ${{ job.status }}
          notification_title: 'Production hm-block-tracker config update has failed - please check urgently!'
          message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>'
          footer: '<{run_url}|View Run> | Linked Repo <{repo_url}|{repo}> | <{workflow_url}|View Workflow>'
          mention_groups: 'S02GCFWL27R'
          notify_when: 'failure'
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.DEV_TEAM_SLACK }}
